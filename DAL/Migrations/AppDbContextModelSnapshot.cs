// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.GameSettings", b =>
                {
                    b.Property<int>("GameSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BoardHeight")
                        .HasColumnType("int");

                    b.Property<int>("BoardWidth")
                        .HasColumnType("int");

                    b.Property<string>("PlayerOneName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PlayerTwoName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("GameSettingsId");

                    b.ToTable("GameSettings");
                });

            modelBuilder.Entity("Domain.GameState", b =>
                {
                    b.Property<int>("GameStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BoardHeight")
                        .HasColumnType("int");

                    b.Property<int>("BoardWidth")
                        .HasColumnType("int");

                    b.Property<string>("GameMode")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("GameStateName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Turn")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("GameStateId");

                    b.ToTable("GameStates");
                });

            modelBuilder.Entity("Domain.Move", b =>
                {
                    b.Property<int>("MoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameStateId")
                        .HasColumnType("int");

                    b.Property<bool>("PlayerOneTurn")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("XCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("YCoordinate")
                        .HasColumnType("int");

                    b.HasKey("MoveId");

                    b.HasIndex("GameStateId");

                    b.ToTable("Move");
                });

            modelBuilder.Entity("Domain.Move", b =>
                {
                    b.HasOne("Domain.GameState", "GameState")
                        .WithMany("Moves")
                        .HasForeignKey("GameStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
